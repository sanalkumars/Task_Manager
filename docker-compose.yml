services:
  mongo:
    image: mongodb/mongodb-community-server:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - tasker_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - tasker_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  user-service:
    build: "./user-service"
    container_name: user-service
    ports:
      - "3001:3001"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - tasker_network
    restart: unless-stopped

  task-service:
    build: "./task-service"
    container_name: task-service
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - tasker_network
    restart: unless-stopped

  notification-service:
    build: "./notification-service"
    container_name: notification-service
    ports:
      - "3003:3003"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - tasker_network
    restart: unless-stopped

volumes:
  mongo_data:

networks:
  tasker_network:
    driver: bridge